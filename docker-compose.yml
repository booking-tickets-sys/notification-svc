version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: notification-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-server:
    build: .
    container_name: notification-server
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDR=redis:6379
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./config.env:/app/config.env
    command: ["./notification-server"]
    restart: unless-stopped

  notification-worker:
    build: .
    container_name: notification-worker
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./config.env:/app/config.env
    command: ["./notification-worker"]
    restart: unless-stopped

  # Optional: Asynqmon for monitoring (uncomment if needed)
  # asynqmon:
  #   image: hibiken/asynqmon:latest
  #   container_name: asynqmon
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     - REDIS_ADDR=redis:6379
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #   restart: unless-stopped

volumes:
  redis_data: 